import proguard.gradle.ProGuardTask

/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java project to get you started.
 * For more details take a look at the Java Quickstart chapter in the Gradle
 * user guide available at https://docs.gradle.org/5.0/userguide/tutorial_java_projects.html
 */

buildscript {
    repositories {
        mavenLocal()
        mavenCentral()
    }
    dependencies {
        classpath("com.guardsquare:proguard-gradle:7.3.0")
    }
}

plugins {
    // Apply the java plugin to add support for Java
    id("java")
    id("com.github.johnrengelman.shadow") version "7.1.2"

}

repositories {
    // Use jcenter for resolving your dependencies.
    // You can declare any Maven/Ivy/file repository here.
    mavenCentral()
    maven("https://jitpack.io")
}

sourceSets {
    main {
        java {
            srcDir("src/main/java")
        }
        resources {
        }
    }
    test {
        java {
            srcDir("src/test/java")
        }
    }
}

dependencies {

    val lombokVersion = "1.18.24"
    annotationProcessor(group = "org.projectlombok", name = "lombok", version = lombokVersion)
    compileOnly(group = "org.projectlombok", name = "lombok", version = lombokVersion)
    testImplementation("org.junit.jupiter:junit-jupiter-api:5.3.1")
    testRuntimeOnly("org.junit.jupiter:junit-jupiter-engine:5.3.1")
    runtimeOnly(group = "org.slf4j", name = "slf4j-api", version = "1.7.36")
    implementation(group = "com.google.guava", name = "guava", version = "30.0-android")
    implementation(group = "ch.qos.logback", name = "logback-classic", version = "1.2.9")
    implementation(group = "commons-io", name = "commons-io", version = "2.7")
    implementation(group = "org.apache.commons", name = "commons-lang3", version = "3.9")
    implementation(group = "com.fasterxml.jackson.core", name = "jackson-databind", version = "2.12.7.1")
    implementation(group = "com.google.code.gson", name = "gson", version = "2.8.9")
    implementation(group = "net.oneandone.reflections8", name = "reflections8", version = "0.11.7")
    // Attempt to fix error found in user's error logback
    // java.lang.NoClassDefFoundError: Could not initialize class java.awt.event.MouseEventjava.lang.NoClassDefFoundError: Could not initialize class java.awt.event.MouseEvent
    implementation(group = "com.intellij", name = "forms_rt", version = "7.0.3")
    // Jackson
    implementation("com.fasterxml.jackson.core:jackson-core:2.8.6")
    implementation("com.fasterxml.jackson.core:jackson-databind:2.12.7.1")
    implementation("com.fasterxml.jackson.dataformat:jackson-dataformat-yaml:2.8.6")
    implementation("xpp3:xpp3_min:1.1.4c")
    implementation("com.thoughtworks.xstream:xstream:1.4.20")
    // Discord rich presence
    implementation("com.github.Vatuu:discord-rpc:1.6.2")
}

tasks {

    val obfuscateTask = task("obfuscate", ProGuardTask::class) {

        val inJar = File("${buildDir}\\libs\\${project.name}.jar")
        val outJar = File("${buildDir}\\libs\\${project.name}-Obfuscated.jar")

        println("In jar = " + inJar.absolutePath)
        println("Out jar = " + outJar.absolutePath)

        injars(inJar.absolutePath)
        outjars(outJar.absolutePath)

        configuration(File("proguard.conf"))

        configurations.getAt("runtimeClasspath").resolvedConfiguration.resolvedArtifacts.forEach {
            libraryjars(file(it.file.absolutePath))
        }

        val jmods = listOf(
            "java.base", "java.datatransfer",
            "java.desktop", "java.management",
            "jdk.jfr", "java.logging"
        )
        val jdkHome = System.getProperty("java.home")

        jmods.forEach {
            libraryjars("${jdkHome}/jmods/$it.jmod")
        }

        printmapping("obfuscation_map.txt")
    }

    shadowJar {
        archiveBaseName.set(project.name)
        archiveClassifier.set("")
        archiveVersion.set("")

        manifest {
            attributes["Implementation-Title"] = project.name
            attributes["Implementation-Version"] = "1.0"
            attributes["Main-Class"] = "com.runescape.Client"
        }

        shadowJar.get().finalizedBy(obfuscateTask)
    }

}


